params {
    // input + output
    input                      = null
    outdir                     = './results'

    // References
    genome                     = 'GRCh38'
    
    // samples
    ignore_samples             = ["Unassigned", "PhiX", "phiX", "CBPhiX", "Undetermined"]
    
    // Boilerplate options
    tracedir                   = "${params.outdir}/pipeline_info"
    enable_conda               = false
    igenomes_base              = 's3://ngi-igenomes/igenomes'
    igenomes_ignore            = false

    // sentieon
    sentieon_license           = '10.160.16.4:8990'
    sentieon_ml_model          = null
    assay                      = "WGS"
    target_region_bed          = null
    pcr                        = true

    // containers    
    sentieoncli_container_url  = 'docker.io/sentieon/sentieon-cli'
    sentieoncli_container_tag  = 'v1.1.0-1'
    
    // nextflow
    publish_dir_mode           = 'copy'
    
    // sample batching
    batch_size                 = null

    // Config options
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    max_multiqc_email_size     = '25.MB'
    multiqc_logo               = null
    
    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '144.GB'
    max_cpus                   = 72
    max_time                   = '48.h'
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

manifest {
    name            = 'elembio/sentieon-cli-nf'
    author          = 'Bryan R Lajoie, Carlos Ruiz Perez, Rosi Bajari, Max Mass'
    homePage        = 'https://gitlab.com/elembio/analysis/nextflow-workflows/sentieon-cli-nf'
    description     = 'sentieon-cli-nf'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.0.0'
    version         = '1.0.0'
}

profiles {
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }

    test { includeConfig 'conf/test.config' }
    test_enrichment { includeConfig 'conf/test_enrichment.config' }
    test_trinity_idt { includeConfig 'conf/test_trinity_idt.config' }
    test_trinity_twist { includeConfig 'conf/test_trinity_twist.config' }
    local { includeConfig 'conf/local.config' }
    genome { includeConfig 'conf/genome.config' }
    exome { includeConfig 'conf/exome.config' }
}

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}
